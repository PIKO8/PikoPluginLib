# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches: [ "master" ]
    paths:
      - '**/gradle/**'
      - '**/build.gradle'
      - '**/settings.gradle'
      - '**/*.java'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      
    - name: Set execute permissions on gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Get version from build.gradle
      id: get_version
      run: |
        VERSION=$(./gradlew -q --console=plain printVersion)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create tag and push v2
      run: |
        git config --global credential.helper store
        git tag "v${VERSION}" || true
        git push origin "v${VERSION}" --force
      env:
        USERNAME: ${{ secrets.USERNAME }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_CREDENTIALS: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload jar file to release
      uses: actions/upload-artifact@v3
      with:
        name: PikoPluginLib-${VERSION}
        path: build/libs/PikoPluginLib-${VERSION}.jar

    - name: Create release
      uses: actions/create-release@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: "v${VERSION}"
        release_name: "Release v${VERSION}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to GitHub Packages
      run: ./gradlew publish
      env:
        USERNAME: ${{ secrets.USERNAME }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
